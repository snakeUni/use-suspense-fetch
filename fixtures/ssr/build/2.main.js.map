{"version":3,"file":"2.main.js","sources":["webpack:////Users/fox/Desktop/my-github/use-suspense-fetch/lib/index.js","webpack:///./src/Comments2.js"],"sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createSuspenseFetch = exports.peek = exports.preload = exports.refresh = void 0;\nvar lru_cache_1 = __importDefault(require(\"lru-cache\"));\nvar defaultOption = {\n    max: 500,\n    // 默认一小时, 如果使用 createSuspense 则可以自行修改\n    maxAge: 1000 * 60 * 60\n};\nvar globalCache = new lru_cache_1.default(defaultOption);\nvar handleSuspenseFetch = function (_a) {\n    var promiseFn = _a.promiseFn, cache = _a.cache, args = _a.args, _b = _a.preload, preload = _b === void 0 ? false : _b, _c = _a.lifeSpan, lifeSpan = _c === void 0 ? 0 : _c;\n    // 使用 str\n    var argsStr = JSON.stringify(args);\n    var cachedValue = cache.get(argsStr);\n    if (cachedValue) {\n        if (preload)\n            return;\n        if (cachedValue === null || cachedValue === void 0 ? void 0 : cachedValue.error)\n            throw cachedValue.error;\n        if (cachedValue === null || cachedValue === void 0 ? void 0 : cachedValue.response)\n            return cachedValue.response;\n        throw cachedValue === null || cachedValue === void 0 ? void 0 : cachedValue.promise;\n    }\n    var cacheValue = {\n        args: args,\n        promise: promiseFn.apply(void 0, args).then(function (res) {\n            if (res) {\n                cacheValue.response = res;\n            }\n            else {\n                cacheValue.response = true;\n            }\n        })\n            .catch(function (error) {\n            if (error) {\n                cacheValue.error = error;\n            }\n            else {\n                cacheValue.error = 'unknown error';\n            }\n        })\n            .then(function () {\n            if (lifeSpan > 0) {\n                setTimeout(function () {\n                    if (cache.has(argsStr)) {\n                        cache.del(argsStr);\n                    }\n                }, lifeSpan);\n            }\n        })\n    };\n    cache.set(argsStr, cacheValue);\n    if (!preload)\n        throw cacheValue.promise;\n};\n/**\n * 虽然叫 use-xx 但是没有使用任何 hook\n * @param fn\n * @param args\n * @returns\n */\nfunction suspenseFetch(fn) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    return handleSuspenseFetch({\n        promiseFn: fn,\n        cache: globalCache,\n        args: args,\n        lifeSpan: suspenseFetch.lifeSpan\n    });\n}\nexports.default = suspenseFetch;\n// 设置 lifeSpan\nsuspenseFetch.lifeSpan = 0;\n// 设置 ssr, 可以修改此设置，达到 ssr 渲染的目的\nsuspenseFetch.ssr = false;\n// 导出去的其他方法，用于全局的缓存, 但是如果是 ssr, 那么在客户端调用 refresh 是没有作用的\nfunction refresh() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return clearInner.apply(void 0, __spreadArray([globalCache], args));\n}\nexports.refresh = refresh;\nfunction preload(fn) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    handleSuspenseFetch({\n        promiseFn: fn,\n        cache: globalCache,\n        args: args,\n        preload: true,\n        lifeSpan: suspenseFetch.lifeSpan\n    });\n}\nexports.preload = preload;\nfunction peek() {\n    var _a;\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var argsStr = JSON.stringify(args);\n    return (_a = globalCache.get(argsStr)) === null || _a === void 0 ? void 0 : _a.response;\n}\nexports.peek = peek;\nfunction clearInner(cache) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    // 如果不传递第二个参数，则清空所有的缓存\n    if (args === undefined || args.length === 0)\n        cache.reset();\n    else {\n        var argsStr = JSON.stringify(args);\n        if (cache.has(argsStr)) {\n            cache.del(argsStr);\n        }\n    }\n}\n/**\n * 创建自己的 LRU 缓存，支持配置选项\n * @param lifeSpan 过期时间\n * @param option 配置选项\n * @returns\n */\nfunction createSuspenseFetch(lifeSpan, option) {\n    if (lifeSpan === void 0) { lifeSpan = 0; }\n    if (option === void 0) { option = {}; }\n    var innerOption = __assign(__assign({}, defaultOption), option);\n    var cache = new lru_cache_1.default(innerOption);\n    return {\n        fetch: function (fn) {\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            return handleSuspenseFetch({\n                promiseFn: fn,\n                cache: cache,\n                args: args,\n                lifeSpan: lifeSpan\n            });\n        },\n        preload: function (fn) {\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            return void handleSuspenseFetch({\n                promiseFn: fn,\n                cache: cache,\n                args: args,\n                preload: true,\n                lifeSpan: lifeSpan\n            });\n        },\n        refresh: function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return clearInner.apply(void 0, __spreadArray([cache], args));\n        },\n        peek: function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var argsStr = JSON.stringify(args);\n            return (_a = cache.get(argsStr)) === null || _a === void 0 ? void 0 : _a.response;\n        }\n    };\n}\nexports.createSuspenseFetch = createSuspenseFetch;\n","import suspenseFetch, { peek } from '../../../lib'\n\nconst API_DELAY = 2000\nconst fakeData = [\n  \"Wait, it doesn't wait for React to load?\",\n  'How does this even work?',\n  'I like marshmallows'\n]\n\nexport default function Comments2({ subreddit }) {\n  console.log('peek:', peek(subreddit))\n  // 会缓存，因为应该记得清楚缓存\n  const response = suspenseFetch(\n    () =>\n      new Promise(resolve =>\n        setTimeout(() => {\n          resolve(fakeData)\n        }, API_DELAY)\n      ),\n    subreddit\n  )\n\n  console.log('post:', response)\n  return (\n    <ul>\n      {response.map((post, i) => (\n        <li key={i}>{post}</li>\n      ))}\n    </ul>\n  )\n}\n"],"mappings":";;;;;;;;;;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AA4BA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAzCA;AA2CA;AACA;AAAA;;;;;;;;;;;;;;;;;;;ACzMA;;AAEA;AACA;AAMA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AADA;AASA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;A","sourceRoot":""}